package Skein

import (
    "encoding/hex"
    "math/big"
    "testing"
)

func Test_UBI_1(t *testing.T) {
    G := []byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
    M := []byte{0x53, 0x48, 0x41, 0x33, 0x01, 0x00, 0x00, 0x00, 
                0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
    Ts, _ := new(big.Int).SetString("5316911983139663491615228241121378304", 10)

    correct := "49b448d060a89dfc33d8a79f4766ca2f0f84566689c33bb369dae8fd20e9546a"
    computed := hex.EncodeToString(UBI(G, M, Ts))

    if correct != computed {
        t.Error("Test_UBI_1 failed: incorrect value!")
    }
}

func Test_UBI_2(t *testing.T) {
    G := []byte{0x49, 0xb4, 0x48, 0xd0, 0x60, 0xa8, 0x9d, 0xfc, 
                0x33, 0xd8, 0xa7, 0x9f, 0x47, 0x66, 0xca, 0x2f, 
                0x0f, 0x84, 0x56, 0x66, 0x89, 0xc3, 0x3b, 0xb3, 
                0x69, 0xda, 0xe8, 0xfd, 0x20, 0xe9, 0x54, 0x6a}
    M := []byte{0xFF}
    Ts, _ := new(big.Int).SetString("63802943797675961899382738893456539648", 10)

    correct := "1e035a91ed39ae27d21d315d0649ae3f6d964d240cc8e6765cfb196294437e20"
    computed := hex.EncodeToString(UBI(G, M, Ts))

    if correct != computed {
        t.Error("Test_UBI_2 failed: incorrect value!")
    }
}

